// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model GlobalUserData {
    uuid            String   @id @default(uuid())
    userId          String   @unique
    birthDate       DateTime? @db.Date
    quizGoodAnswers Int      @default(0)
    quizBadAnswers  Int      @default(0)
    Quote           Quote[]

    @@index([userId])
}

model LogLevel {
    id   Int    @id @default(autoincrement())
    name String @unique

    logs Logs[]
}

model Logs {
    id        Int      @id @default(autoincrement())
    message   String   @db.MediumText
    level     LogLevel @relation(fields: [levelId], references: [id])
    levelId   Int
    createdAt DateTime @default(now())
}

model Config {
    uuid    String @id @default(uuid())
    key     String
    value   String
    guildId String

    @@unique([key, guildId], name: "unique_key_guildId")
    @@index([guildId])
}

model Quote {
    uuid       String         @id @default(uuid())
    guildId    BigInt
    author     GlobalUserData @relation(fields: [authorUuid], references: [uuid], onDelete: Cascade)
    authorUuid String
    quote      String
    context    String         @default("")
    createdAt  DateTime       @default(now())
}
